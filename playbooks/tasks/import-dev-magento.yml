---

- set_fact:
    mage2_env_php: "{{ siteworx_docroot }}/app/etc/env.php"

- name: See if env.php Exists
  stat:
    path: "{{ mage2_env_php }}"
  register: env_php_stat

- name: Get the Old MySQL Username
  shell: >
    . ~{{ nex_app_unixuser }}/.bashrc && php -r '
    $env = include "{{ mage2_env_php }}";
    print($env["db"]["connection"]["default"]["username"]);
    '
  args:
    executable: "/bin/bash"
  become: true
  become_user: "{{ nex_app_unixuser }}"
  when: env_php_stat.stat.exists
  register: mage2_old_dbuser

- name: Get the Old MySQL DB Name
  shell: >
    . ~{{ nex_app_unixuser }}/.bashrc && php -r '
    $env = include "{{ mage2_env_php }}";
    print($env["db"]["connection"]["default"]["dbname"]);
    '
  args:
    executable: "/bin/bash"
  become: true
  become_user: "{{ nex_app_unixuser }}"
  when: env_php_stat.stat.exists
  register: mage2_old_dbname

- set_fact:
    mage2_new_dbuser: "{{ nex_app_unixuser }}_{{ mage2_old_dbuser.stdout | regex_replace('^[a-z0-9]+_', '') }}"
  when: env_php_stat.stat.exists

- set_fact:
    mage2_new_dbname: "{{ nex_app_unixuser }}_{{ mage2_old_dbname.stdout | regex_replace('^[a-z0-9]+_', '') }}"
  when: env_php_stat.stat.exists

- name: Change MySQL User Passwords
  mysql_user:
    name: "{{ mage2_new_dbuser }}"
    password: "{{ mysql_user_pass }}"
    host_all: true
    config_file: "/root/.my.ansible.cnf"
    state: "present"
  when: mage2_new_dbuser is defined
  ignore_errors: true

- name: Set New MySQL Creds
  shell: >
    . ~{{ nex_app_unixuser }}/.bashrc && php -r '
    $env = include "{{ mage2_env_php }}";
    $env["db"]["connection"]["default"]["dbname"] = "{{ mage2_new_dbname }}";
    $env["db"]["connection"]["default"]["username"] = "{{ mage2_new_dbuser }}";
    $env["db"]["connection"]["default"]["password"] = "{{ mysql_user_pass }}";
    file_put_contents("{{ mage2_env_php }}", "<?php\nreturn " . var_export($env, true) . ";") || exit(1);
    '
  args:
    executable: "/bin/bash"
  become: true
  become_user: "{{ nex_app_unixuser }}"
  when: env_php_stat.stat.exists

- name: Update Encryption Key
  shell: >
    . ~{{ nex_app_unixuser }}/.bashrc && php -r '
    $env = include "{{ mage2_env_php }}";
    $env["crypt"]["key"] = "asdf1234";
    file_put_contents("{{ mage2_env_php }}", "<?php\nreturn " . var_export($env, true) . ";") || exit(1);
    '
  args:
    executable: "/bin/bash"
  become: true
  become_user: "{{ nex_app_unixuser }}"
  when: env_php_stat.stat.exists

- name: Update Admin URL + Base URLs
  shell: >
    . ~{{ nex_app_unixuser }}/.bashrc && php -r '
    $env = include "{{ mage2_env_php }}";
    $env["backend"]["frontName"] = "{{ nex_app_admin_location }}";
    $env["system"]["default"]["web"]["unsecure"]["base_url"] = "{{ nex_app_base_url }}";
    file_put_contents("{{ mage2_env_php }}", "<?php\nreturn " . var_export($env, true) . ";") || exit(1);
    '
  args:
    executable: "/bin/bash"
  become: true
  become_user: "{{ nex_app_unixuser }}"
  when: env_php_stat.stat.exists

- name: Scrub PII
  command: >
    /usr/nexkit/bin/nkmagento2 repair
      --scrub-pii {{ siteworx_docroot }}
  when:
    - env_php_stat.stat.exists
    - cloudhost_import_scrub_pii

- name: Reset the Redis Socket
  shell: >
    . ~{{ nex_app_unixuser }}/.bashrc && php -r '
    $env = include "{{ mage2_env_php }}";
    if (
      isset($env["cache"]["frontend"]["default"]["backend"]) &&
      $env["cache"]["frontend"]["default"]["backend"] == "Cm_Cache_Backend_Redis"
    ) {
      $env["cache"]["frontend"]["default"]["backend_options"]["server"] = "/var/run/redis-multi-{{ nex_app_unixuser }}.redis/redis.sock";
      file_put_contents("{{ mage2_env_php }}", "<?php\nreturn " . var_export($env, true) . ";") || exit(1);
    }
    '
  args:
    executable: "/bin/bash"
  become: true
  become_user: "{{ nex_app_unixuser }}"
  when: env_php_stat.stat.exists
  ignore_errors: true

- name: New Admin Pass
  shell: >
    . ~{{ nex_app_unixuser }}/.bashrc && php {{ siteworx_docroot }}/bin/magento
    admin:user:create
    --admin-user="{{ nex_app_username | quote }}"
    --admin-password="{{ nex_app_password | quote }}"
    --admin-email="{{ nex_app_email | quote }}"
    --admin-firstname="{{ nex_app_user_firstname | quote }}"
    --admin-lastname="{{ nex_app_user_lastname | quote }}"
  args:
    executable: "/bin/bash"
  become: true
  become_user: "{{ nex_app_unixuser }}"
  when: env_php_stat.stat.exists
  ignore_errors: true

- name: Update Base URLs (This May Be Redundant)
  command: >
    /usr/nexkit/bin/nkmagento2 repair
      --base-url={{ nex_app_base_url }}
      --secure-base-url={{ nex_app_secure_base_url }}
      {{ siteworx_docroot }}
  when: env_php_stat.stat.exists

- name: Clear Magento Cache
  shell: |
    . ~{{ nex_app_unixuser }}/.bashrc && php {{ siteworx_docroot }}/bin/magento cache:clean
    . ~{{ nex_app_unixuser }}/.bashrc && php {{ siteworx_docroot }}/bin/magento cache:flush
    rm -rf {{ siteworx_domainroot }}/var/cache/*
    rm -rf {{ siteworx_docroot }}/var/cache/*
    rm -rf {{ siteworx_domainroot }}/var/session/*
    rm -rf {{ siteworx_docroot }}/var/session/*
  args:
    executable: "/bin/bash"
  become: true
  become_user: "{{ nex_app_unixuser }}"
  when: env_php_stat.stat.exists
  ignore_errors: true

- name: Remove Old Log/Report Files
  shell: |
    rm -rf {{ siteworx_domainroot }}/var/log/*
    rm -rf {{ siteworx_docroot }}/var/log/*
    rm -rf {{ siteworx_domainroot }}/var/report/*
    rm -rf {{ siteworx_docroot }}/var/report/*
  become: true
  become_user: "{{ nex_app_unixuser }}"
  when: env_php_stat.stat.exists
  ignore_errors: true

- name: Scrub Other Files for Old DB Refs (DB Name)
  shell: >
    find {{ siteworx_docroot }} -type f -name '*.php' -print0 |
    xargs -P4 -0 -r sed -i 's/{{ mage2_old_dbname | quote }}/{{ mage2_new_dbname | quote }}/g'
  become: true
  become_user: "{{ nex_app_unixuser }}"
  when: env_php_stat.stat.exists
  ignore_errors: true

- name: Scrub Other Files for Old DB Refs (DB User)
  shell: >
    find {{ siteworx_docroot }} -type f -name '*.php' -print0 |
    xargs -P4 -0 -r sed -i 's/{{ mage2_old_dbuser | quote }}/{{ mage2_new_dbuser | quote }}/g'
  when:
    - env_php_stat.stat.exists
    - (mage2_old_dbname != mage2_old_dbuser) or (mage2_new_dbname != mage2_new_dbuser)
  become: true
  become_user: "{{ nex_app_unixuser }}"
  ignore_errors: true
